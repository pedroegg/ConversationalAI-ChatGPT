map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $http_origin $cors_origins {
    default "";
    ~^http?://(127\.0\.0\.1|localhost|dev\.localhost) "$http_origin";
}

upstream flask_socketio_nodes {
    ip_hash;

    server docker-app-1:5000;
    # to scale the app, just add more nodes here!
}

server {
    listen       80;
    server_name  localhost dev.localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    root /usr/share/nginx/html;
    index index.html index.htm;

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location / {
        add_header Access-Control-Allow-Origin $cors_origins;
        add_header Access-Control-Allow-Headers Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS,PUT,DELETE,PATCH;

        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_pass http://flask_socketio_nodes;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
}